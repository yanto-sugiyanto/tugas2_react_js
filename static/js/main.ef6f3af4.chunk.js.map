{"version":3,"sources":["page/Header.js","page/Footer.js","ListData/ListMenuUtama.js","page/MenuUtama.js","page/MenuTentangKami.js","page/MenuKontak.js","ListData/ListMakanan.js","page/MenuMakanan.js","App.js","serviceWorker.js","index.js"],"names":["Header","Footer","Component","ListMenuUtama","src","this","props","food1","alt","width","MenuUtama","MenuTentangKami","state","tentang","MenuKontak","alamat","kontak","ListMakanan","datalist","gambar","MenuMakanan","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oOAeeA,MAbf,WACC,OACC,6BACA,gCACA,wCACA,0CACA,0CACA,iDCCaC,E,uKALb,OACC,oD,GAHkBC,aCcNC,E,uKAbb,OACC,6BACA,4BACA,uEAEA,gCACA,yBAAKC,IAAKC,KAAKC,MAAMC,MAAOC,IAAI,oBAAoBC,MAAM,c,GARjCP,aCWbQ,E,uKARb,OACC,6BACA,kBAAC,EAAD,CAAeH,MAAO,6E,GAJDL,aCeTS,E,kDAhBd,WAAaL,GAAQ,IAAD,8BACnB,cAAOA,IACFM,MAAQ,CACZC,QAAQ,yIAHU,E,qDAOlB,OACC,6BACA,gCACA,2CADA,IACqBR,KAAKO,MAAMC,c,GAXNX,aCoBfY,E,kDAnBd,WAAaR,GAAQ,IAAD,8BACnB,cAAOA,IACFM,MAAQ,CACZG,OAAO,4FACPC,OAAO,eAJW,E,qDAQlB,OACC,6BACA,gCACA,4BAAKX,KAAKO,MAAMG,OAAhB,KACA,6CAAmBV,KAAKO,MAAMI,OAA9B,W,GAbqBd,aCgBVe,E,kDAdd,WAAaX,GAAO,IAAD,8BAClB,cAAOA,IACFM,MAAQ,CACZM,SAAS,EAAKZ,MAAMa,QAHH,E,qDAOlB,OACC,6BACA,yBAAKf,IAAOC,KAAKO,MAAMM,SAAWV,IAAM,kBAAkBC,MAAQ,a,GAV3CP,aC8BXkB,E,uKA5Bb,OACC,6BACA,oEACA,4BACA,kBAAC,EAAD,CAAaD,OAAO,8EAEnB,4BACD,kBAAC,EAAD,CAAaA,OAAO,wEAGnB,4BACD,kBAAC,EAAD,CAAaA,OAAO,gFAGnB,4BACD,kBAAC,EAAD,CAAaA,OAAO,6GAGnB,4BACD,kBAAC,EAAD,CAAaA,OAAQ,sI,GArBEjB,aCyBXmB,G,6KAhBb,OACE,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GATcnB,cCGEoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.ef6f3af4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header (){\r\n\treturn (\r\n\t\t<div>\r\n\t\t<center>\r\n\t\t<span>Home |</span>\r\n\t\t<span>Produk |</span>\r\n\t\t<span>Kontak |</span>\r\n\t\t<span>Tentang Kami</span>\r\n\t\t</center>\r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\nexport default Header;","import React,{Component} from 'react';\r\n\r\n\r\nclass Footer extends Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<h3>Tugas 2 React Js</h3>\r\n\t\t\t )\r\n\t}\r\n}\r\nexport default Footer;","import React, {Component} from 'react';\r\n\r\nclass ListMenuUtama extends Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<h1>\r\n\t\t\t<center>Selamat Datang Di Warung Nusantara</center>\r\n\t\t\t</h1>\r\n\t\t\t<center>\r\n\t\t\t<img src={this.props.food1} alt=\"Masakan Nusantara\" width=\"600\"/>\r\n\t\t\t</center>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\nexport default ListMenuUtama;","import React, {Component} from 'react';\r\nimport ListMenuUtama from '../ListData/ListMenuUtama';\r\n\r\nclass MenuUtama extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<ListMenuUtama food1= \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/food1.jpg\"/>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nexport default MenuUtama;","import React, {Component} from 'react';\r\nclass MenuTentangKami extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t\tthis.state = {\r\n\t\t\ttentang:' Warung Nusantara Adalah Restoran Yang Bernuansa Makanan Nusantara, Kami Ada Untuk Membuat Anda Menikmati Makanan Khas Dari Nusantara'\r\n\t\t}\r\n\t}\r\n\t\trender (){\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<p>Tentang Kami</p> {this.state.tentang}\r\n\t\t\t</center>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default MenuTentangKami;","import React, {Component} from 'react';\r\nclass MenuKontak extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\t\tthis.state = {\r\n\t\t\talamat:'Jl.Swadaya IV.PD Ranggon, Cipayung Kota Jakarta Timur Daerah Khusus Ibukota Jakarta 13860', \r\n\t\t\tkontak:'08122222222'\r\n\t\t}\r\n\t}\r\n\t\trender(){\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t<center>\r\n\t\t\t\t<h3>{this.state.alamat} </h3>\r\n\t\t\t\t<h4>Kontak Kami : {this.state.kontak} </h4>\r\n\t\t\t\t</center>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\r\n\t}\r\n}\r\nexport default MenuKontak;","import React, {Component} from 'react';\r\n\r\nclass ListMakanan extends Component {\r\n\tconstructor (props){\r\n\t\tsuper (props);\r\n\t\tthis.state = {\r\n\t\t\tdatalist:this.props.gambar\r\n\t\t};\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<img src = {this.state.datalist } alt = \"Produk Makanan \" width = \"150\"/>\r\n</div>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default ListMakanan;","import React, {Component} from 'react';\r\nimport ListMakanan  from '../ListData/ListMakanan' ;\r\nclass MenuMakanan extends Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<h3>Daftar Makanan Yang Kami Sediakan : </h3>\r\n\t\t\t<td>\r\n\t\t\t<ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\"         />\r\n\t\t\t </td>\r\n\t\t\t <td>\r\n\t\t\t<ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\"        />\r\n\t\t\t </td>\r\n\r\n\t\t\t <td>\r\n\t\t\t<ListMakanan gambar=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"       />\r\n\t\t\t </td>\r\n\r\n\t\t\t <td>\r\n\t\t\t<ListMakanan gambar=\"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\"      />\r\n\t\t\t </td>\r\n\r\n\t\t\t <td>\r\n\t\t\t<ListMakanan gambar= \"https://oomphcdn01.sgp1.digitaloceanspaces.com/files/uploads/contributors/ARTICLE_IMAGE_UGC_1077_20208271077_yz3And2qnM.jpg\"       />\r\n\t\t\t </td>\r\n\r\n\t\t\t </div>\r\n\r\n\t\t\t);\r\n\r\n\t}\r\n}\r\nexport default MenuMakanan;","import React,{Component} from 'react';\nimport Header from './page/Header';\nimport Footer from './page/Footer';\nimport MenuUtama from './page/MenuUtama';\nimport MenuTentangKami from './page/MenuTentangKami';\nimport MenuKontak from './page/MenuKontak';\nimport MenuMakanan from './page/MenuMakanan';\nimport './App.css';\n\nclass App extends Component {\n\trender(){\n\t\treturn (\n    <div>\n    <Header />\n    <MenuUtama />\n    <MenuTentangKami />\n    <MenuKontak />\n    <MenuMakanan />\n    <Footer />\n\n    </div>\n    \n  );\n\t}\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}